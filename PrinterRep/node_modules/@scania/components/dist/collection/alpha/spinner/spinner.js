import { Component, h, Prop, State } from '@stencil/core';
export class Spinner {
  constructor() {
    this.size = '';
    this.type = '';
    this.cubes = 9;
    this.rects = 5;
  }
  renderElements(num, className) {
    const elems = [];
    for (let i = 1; i <= num; i++) {
      elems.push(h("div", { class: className + i }));
    }
    return elems;
  }
  render() {
    return (h("div", { class: `sdds-spinner-${this.type} sdds-spinner-${this.type}-${this.size == 'sm' || this.size == 'md' ? this.size : ''} ` },
      this.type === 'cube' && this.renderElements(this.cubes, 'cube'),
      this.type === 'linear' && this.renderElements(this.rects, 'rect')));
  }
  static get is() { return "sdds-spinner"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["spinner.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["spinner.css"]
  }; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "size",
      "reflect": false,
      "defaultValue": "''"
    },
    "type": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "type",
      "reflect": false,
      "defaultValue": "''"
    }
  }; }
  static get states() { return {
    "cubes": {},
    "rects": {}
  }; }
}
