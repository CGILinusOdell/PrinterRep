import { Component, h, Prop, State, Element } from '@stencil/core';
// import hljs from 'highlight.js';
// Highlight JS is not supported in IE 11, fallback provided in the code-sample.scss
import hljs from 'highlight.js/lib/highlight';
import js from 'highlight.js/lib/languages/javascript';
import xml from 'highlight.js/lib/languages/xml';
import css from 'highlight.js/lib/languages/css';
export class Field {
  constructor() {
    this.type = 'html';
  }
  componentWillLoad() {
    // FIXME: Would be better to make the code-sample component not initiating
    // the component but only render the html as text
    const parsed = this.el.innerHTML
      .replace(/"/g, "'")
      .replace(/&quot;/g, '"')
      .replace(/<!---->/g, '');
    if (!document.head.attachShadow) {
      hljs.configure({
        classPrefix: 'sc-c-code-sample hljs-',
        useBR: true,
      });
    }
    hljs.registerLanguage('js', js);
    hljs.registerLanguage('html', xml);
    hljs.registerLanguage('css', css);
    this.code = hljs.highlight(this.type, parsed, false).value;
  }
  render() {
    return [
      h("slot", null),
      h("pre", null,
        h("code", Object.assign({ class: this.type }, { innerHTML: this.code }))),
    ];
  }
  static get is() { return "c-code-sample"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["code-sample.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["code-sample.css"]
  }; }
  static get properties() { return {
    "type": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "type",
      "reflect": false,
      "defaultValue": "'html'"
    }
  }; }
  static get states() { return {
    "code": {}
  }; }
  static get elementRef() { return "el"; }
}
