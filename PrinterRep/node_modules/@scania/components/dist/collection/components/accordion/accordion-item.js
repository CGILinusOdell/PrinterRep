import { Component, Event, h, Prop } from '@stencil/core';
export class AccordionItem {
  constructor() {
    /** The header gives users the context about the additional information available inside the panel */
    this.header = '';
    /** Icon can be placed after or before accordion header. Values accepted: `prefix` or `suffix`
     *  Default value is `suffix` */
    this.affix = 'suffix';
    /** Disabled option in `boolean`. */
    this.disabled = false;
    /** Set to true to expand panel open */
    this.expanded = false;
    /** When true 16px on right padding instead of 64px */
    this.paddingReset = false;
  }
  openAccordion() {
    this.expanded = !this.expanded;
    this.accordionItemToggle.emit(this.expanded);
  }
  render() {
    return (h("div", { class: `sdds-accordion-item 
        ${this.disabled ? 'disabled' : ''} 
        ${this.expanded ? 'expanded' : ''}
        ` },
      h("div", { class: `sdds-accordion-header-${this.affix}`, onClick: () => this.openAccordion() },
        h("div", { class: "sdds-accordion-title" }, this.header),
        h("div", { class: "sdds-accordion-icon" },
          h("svg", { width: "12", height: "7", viewBox: "0 0 12 7", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
            h("path", { d: "M1 1L6 6L11 1", stroke: "currentColor", "stroke-width": "1.25", "stroke-linecap": "round", "stroke-linejoin": "round" })))),
      h("div", { class: `sdds-accordion-panel 
            ${this.paddingReset ? 'sdds-accordion-panel--padding-reset ' : ''}         
            ` },
        h("slot", null))));
  }
  static get is() { return "sdds-accordion-item"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["accordion.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["accordion.css"]
  }; }
  static get properties() { return {
    "header": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The header gives users the context about the additional information available inside the panel"
      },
      "attribute": "header",
      "reflect": false,
      "defaultValue": "''"
    },
    "affix": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Icon can be placed after or before accordion header. Values accepted: `prefix` or `suffix`\nDefault value is `suffix`"
      },
      "attribute": "affix",
      "reflect": false,
      "defaultValue": "'suffix'"
    },
    "disabled": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Disabled option in `boolean`."
      },
      "attribute": "disabled",
      "reflect": false,
      "defaultValue": "false"
    },
    "expanded": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Set to true to expand panel open"
      },
      "attribute": "expanded",
      "reflect": false,
      "defaultValue": "false"
    },
    "paddingReset": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "When true 16px on right padding instead of 64px"
      },
      "attribute": "padding-reset",
      "reflect": false,
      "defaultValue": "false"
    }
  }; }
  static get events() { return [{
      "method": "accordionItemToggle",
      "name": "accordionItemToggle",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": "Fires after the accordion item is closed or opened, emitting the value (as boolean) of the current state of the accordion"
      },
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      }
    }]; }
}
