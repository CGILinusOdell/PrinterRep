import { Component, h, Prop, Watch, State } from '@stencil/core';
export class SddsBadges {
  constructor() {
    this.value = '';
    this.shape = '';
    this.size = 'sm';
    this.text = '';
  }
  watchValue() {
    // parse the value to number
    const valueAsNumber = parseInt(this.value);
    if (!isNaN(valueAsNumber)) {
      this.shape = valueAsNumber.toString().length >= 2 ? 'pill' : '';
      this.size = '';
      this.text =
        valueAsNumber.toString().length >= 3 ? '99+' : valueAsNumber.toString();
    }
    else {
      this.value !== ''
        ? console.warn('The provided value is either empty or string, please provide value as number.')
        : '';
    }
  }
  componentWillLoad() {
    this.watchValue();
  }
  render() {
    return (h("div", { class: `sdds-badges sdds-badges-${this.size} sdds-badges-${this.shape}` },
      h("div", { class: "sdds-badges-text" }, this.text)));
  }
  static get is() { return "sdds-badges"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["badges.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["badges.css"]
  }; }
  static get properties() { return {
    "value": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "value",
      "reflect": false,
      "defaultValue": "''"
    }
  }; }
  static get states() { return {
    "shape": {},
    "size": {},
    "text": {}
  }; }
  static get watchers() { return [{
      "propName": "value",
      "methodName": "watchValue"
    }]; }
}
