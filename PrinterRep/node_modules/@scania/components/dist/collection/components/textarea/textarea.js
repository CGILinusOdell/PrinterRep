import { Component, h, Listen, Prop, State, Event, } from '@stencil/core';
export class Textarea {
  constructor() {
    /** Label text */
    this.label = '';
    /** Name attribute */
    this.name = '';
    /** Helper text */
    this.helper = '';
    /** Label position: `no-label` (default), `inside`, `outside` */
    this.labelPosition = 'no-label';
    /** Placeholder text */
    this.placeholder = '';
    /** Value of the input text */
    this.value = '';
    /** Set input in disabled state */
    this.disabled = false;
    this.autofocus = false;
  }
  // Listener if input enters focus state
  handleFocusIn() {
    this.focusInput = true;
  }
  // Listener if input leaves focus state
  handleFocusOut() {
    this.focusInput = false;
  }
  // Data input event in value prop
  handleInput(e) {
    this.value = e.target.value;
  }
  /* Set the input as focus when clicking the whole textfield with suffix/prefix */
  handleFocusClick() {
    this.textEl.focus();
  }
  handleChange(e) {
    this.customChange.emit(e);
  }
  render() {
    return (h("div", { class: `
        sdds-textarea-container
        ${this.labelPosition === 'inside' ? 'sdds-textarea-label-inside' : ''}
        ${this.focusInput ? 'sdds-textarea-focus' : ''}
        ${this.disabled ? 'sdds-textarea-disabled' : ''}
        ${this.value.length > 0 ? 'sdds-textarea-data' : ''}
        ${this.state == 'error' || this.state == 'success'
        ? `sdds-textarea-${this.state}`
        : ''}
        `, onClick: () => this.handleFocusClick() },
      this.label.length > 0 && (h("span", { class: 'sdds-textarea-label' }, this.label)),
      h("div", { class: "sdds-textarea-wrapper" },
        h("textarea", { class: 'sdds-textarea-input', ref: (inputEl) => (this.textEl = inputEl), disabled: this.disabled, placeholder: this.placeholder, value: this.value, name: this.name, autofocus: this.autofocus, maxlength: this.maxlength, cols: this.cols, rows: this.rows, onInput: (e) => this.handleInput(e), onChange: (e) => this.handleChange(e) }),
        h("span", { class: "sdds-textarea-resizer-icon" },
          h("svg", { width: "12", height: "12", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
            h("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M11.8536 0.853553C12.0488 0.658291 12.0488 0.341709 11.8536 0.146447C11.6583 -0.0488155 11.3417 -0.0488155 11.1464 0.146447L0.146447 11.1464C-0.0488155 11.3417 -0.0488155 11.6583 0.146447 11.8536C0.341709 12.0488 0.658291 12.0488 0.853553 11.8536L11.8536 0.853553ZM11.8536 4.64645C12.0488 4.84171 12.0488 5.15829 11.8536 5.35355L5.35355 11.8536C5.15829 12.0488 4.84171 12.0488 4.64645 11.8536C4.45118 11.6583 4.45118 11.3417 4.64645 11.1464L11.1464 4.64645C11.3417 4.45118 11.6583 4.45118 11.8536 4.64645ZM11.8536 8.64645C12.0488 8.84171 12.0488 9.15829 11.8536 9.35355L9.35355 11.8536C9.15829 12.0488 8.84171 12.0488 8.64645 11.8536C8.45118 11.6583 8.45118 11.3417 8.64645 11.1464L11.1464 8.64645C11.3417 8.45118 11.6583 8.45118 11.8536 8.64645Z", fill: "currentColor" })))),
      this.helper.length > 0 && (h("span", { class: 'sdds-textarea-helper' }, this.helper)),
      this.maxlength > 0 && (h("div", { class: 'sdds-textarea-textcounter' },
        this.value.length,
        ' ',
        h("span", { class: "sdds-textfield-textcounter-divider" }, " / "),
        ' ',
        this.maxlength))));
  }
  static get is() { return "sdds-textarea"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["textarea.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["textarea.css"]
  }; }
  static get properties() { return {
    "label": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Label text"
      },
      "attribute": "label",
      "reflect": false,
      "defaultValue": "''"
    },
    "name": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Name attribute"
      },
      "attribute": "name",
      "reflect": false,
      "defaultValue": "''"
    },
    "helper": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Helper text"
      },
      "attribute": "helper",
      "reflect": false,
      "defaultValue": "''"
    },
    "cols": {
      "type": "number",
      "mutable": false,
      "complexType": {
        "original": "number",
        "resolved": "number",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Textarea cols attribute"
      },
      "attribute": "cols",
      "reflect": false
    },
    "rows": {
      "type": "number",
      "mutable": false,
      "complexType": {
        "original": "number",
        "resolved": "number",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Textarea rows attribute"
      },
      "attribute": "rows",
      "reflect": false
    },
    "labelPosition": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Label position: `no-label` (default), `inside`, `outside`"
      },
      "attribute": "label-position",
      "reflect": false,
      "defaultValue": "'no-label'"
    },
    "placeholder": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Placeholder text"
      },
      "attribute": "placeholder",
      "reflect": false,
      "defaultValue": "''"
    },
    "value": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Value of the input text"
      },
      "attribute": "value",
      "reflect": false,
      "defaultValue": "''"
    },
    "disabled": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Set input in disabled state"
      },
      "attribute": "disabled",
      "reflect": false,
      "defaultValue": "false"
    },
    "state": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Error state of input"
      },
      "attribute": "state",
      "reflect": false
    },
    "maxlength": {
      "type": "number",
      "mutable": false,
      "complexType": {
        "original": "number",
        "resolved": "number",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Max length of input"
      },
      "attribute": "maxlength",
      "reflect": false
    },
    "autofocus": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "autofocus",
      "reflect": false,
      "defaultValue": "false"
    }
  }; }
  static get states() { return {
    "focusInput": {}
  }; }
  static get events() { return [{
      "method": "customChange",
      "name": "customChange",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": "Change event for the textarea"
      },
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      }
    }]; }
  static get listeners() { return [{
      "name": "focus",
      "method": "handleFocusIn",
      "target": undefined,
      "capture": false,
      "passive": false
    }, {
      "name": "focusout",
      "method": "handleFocusOut",
      "target": undefined,
      "capture": false,
      "passive": false
    }]; }
}
