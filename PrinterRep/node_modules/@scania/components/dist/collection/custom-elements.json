{
  "timestamp": "2022-05-24T14:26:37",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.14.2",
    "typescriptVersion": "4.5.4"
  },
  "components": [
    {
      "filePath": "./src/components/code-sample/code-sample.tsx",
      "encapsulation": "shadow",
      "tag": "c-code-sample",
      "readme": "# c-code-sample\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'html'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/accordion/accordion.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-accordion",
      "readme": "# sdds-accordion-item\n\n```html\n<sdds-accordion>\n  <sdds-accordion-item header=\"First item\" affix=\"prefix\" tabindex=\"1\">\n    This is the panel, which contains associated information with the header.\n    Usually it contains text, set in the same size as the header. Lorem ipsum\n    doler sit amet.\n  </sdds-accordion-item>\n  <sdds-accordion-item\n    header=\"Second item\"\n    affix=\"suffix\"\n    expanded=\"true\"\n    tabindex=\"2\"\n  >\n    This is the panel, which contains associated information with the header.\n    Usually it contains text, set in the same size as the header. Lorem ipsum\n    doler sit amet.\n  </sdds-accordion-item>\n  <sdds-accordion-item\n    header=\"Disabled item\"\n    affix=\"suffix\"\n    disabled=\"true\"\n    expanded=\"true\"\n    tabindex=\"-1\"\n  >\n    This is the disabled panel, which contains associated information with the\n    header. Usually it contains text, set in the same size as the header. Lorem\n    ipsum doler sit amet.\n  </sdds-accordion-item>\n</sdds-accordion>\n```\n",
      "docs": "```html\n<sdds-accordion>\n  <sdds-accordion-item header=\"First item\" affix=\"prefix\" tabindex=\"1\">\n    This is the panel, which contains associated information with the header.\n    Usually it contains text, set in the same size as the header. Lorem ipsum\n    doler sit amet.\n  </sdds-accordion-item>\n  <sdds-accordion-item\n    header=\"Second item\"\n    affix=\"suffix\"\n    expanded=\"true\"\n    tabindex=\"2\"\n  >\n    This is the panel, which contains associated information with the header.\n    Usually it contains text, set in the same size as the header. Lorem ipsum\n    doler sit amet.\n  </sdds-accordion-item>\n  <sdds-accordion-item\n    header=\"Disabled item\"\n    affix=\"suffix\"\n    disabled=\"true\"\n    expanded=\"true\"\n    tabindex=\"-1\"\n  >\n    This is the disabled panel, which contains associated information with the\n    header. Usually it contains text, set in the same size as the header. Lorem\n    ipsum doler sit amet.\n  </sdds-accordion-item>\n</sdds-accordion>\n```",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "divider",
          "type": "boolean",
          "mutable": false,
          "attr": "divider",
          "reflectToAttr": false,
          "docs": "Enable or disable divider lines between items",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/accordion/accordion-item.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-accordion-item",
      "readme": "# sdds-accordion-item\n\n```html\n<sdds-accordion>\n  <sdds-accordion-item header=\"First item\" affix=\"prefix\" tabindex=\"1\">\n    This is the panel, which contains associated information with the header.\n    Usually it contains text, set in the same size as the header. Lorem ipsum\n    doler sit amet.\n  </sdds-accordion-item>\n  <sdds-accordion-item\n    header=\"Second item\"\n    affix=\"suffix\"\n    expanded=\"true\"\n    tabindex=\"2\"\n  >\n    This is the panel, which contains associated information with the header.\n    Usually it contains text, set in the same size as the header. Lorem ipsum\n    doler sit amet.\n  </sdds-accordion-item>\n  <sdds-accordion-item\n    header=\"Disabled item\"\n    affix=\"suffix\"\n    disabled=\"true\"\n    expanded=\"true\"\n    tabindex=\"-1\"\n  >\n    This is the disabled panel, which contains associated information with the\n    header. Usually it contains text, set in the same size as the header. Lorem\n    ipsum doler sit amet.\n  </sdds-accordion-item>\n</sdds-accordion>\n```\n",
      "docs": "```html\n<sdds-accordion>\n  <sdds-accordion-item header=\"First item\" affix=\"prefix\" tabindex=\"1\">\n    This is the panel, which contains associated information with the header.\n    Usually it contains text, set in the same size as the header. Lorem ipsum\n    doler sit amet.\n  </sdds-accordion-item>\n  <sdds-accordion-item\n    header=\"Second item\"\n    affix=\"suffix\"\n    expanded=\"true\"\n    tabindex=\"2\"\n  >\n    This is the panel, which contains associated information with the header.\n    Usually it contains text, set in the same size as the header. Lorem ipsum\n    doler sit amet.\n  </sdds-accordion-item>\n  <sdds-accordion-item\n    header=\"Disabled item\"\n    affix=\"suffix\"\n    disabled=\"true\"\n    expanded=\"true\"\n    tabindex=\"-1\"\n  >\n    This is the disabled panel, which contains associated information with the\n    header. Usually it contains text, set in the same size as the header. Lorem\n    ipsum doler sit amet.\n  </sdds-accordion-item>\n</sdds-accordion>\n```",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "affix",
          "type": "string",
          "mutable": false,
          "attr": "affix",
          "reflectToAttr": false,
          "docs": "Icon can be placed after or before accordion header. Values accepted: `prefix` or `suffix`\nDefault value is `suffix`",
          "docsTags": [],
          "default": "'suffix'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled option in `boolean`.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "Set to true to expand panel open",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "header",
          "type": "string",
          "mutable": false,
          "attr": "header",
          "reflectToAttr": false,
          "docs": "The header gives users the context about the additional information available inside the panel",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "paddingReset",
          "type": "boolean",
          "mutable": false,
          "attr": "padding-reset",
          "reflectToAttr": false,
          "docs": "When true 16px on right padding instead of 64px",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "accordionItemToggle",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Fires after the accordion item is closed or opened, emitting the value (as boolean) of the current state of the accordion",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/badges/badges-component.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-badges",
      "readme": "# sdds-badges\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/table/table-body-cell.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-body-cell",
      "readme": "# c-table\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "cellKey",
          "type": "any",
          "mutable": false,
          "attr": "cell-key",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "cellValue",
          "type": "number | string",
          "mutable": false,
          "attr": "cell-value",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "bodyCellData",
          "target": "body",
          "capture": false,
          "passive": false
        },
        {
          "event": "headKey",
          "target": "body",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "sdds-table"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "sdds-table": [
          "sdds-body-cell"
        ]
      }
    },
    {
      "filePath": "./src/components/button/button-component.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-button",
      "readme": "# sdds-button\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "fullbleed",
          "type": "boolean",
          "mutable": false,
          "attr": "fullbleed",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "text",
          "type": "string",
          "mutable": false,
          "attr": "text",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/card/card.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-card",
      "readme": "# sdds-card\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/alpha/slider/slider-continuousValue.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-continousvalue-slider",
      "readme": "# sdds-slider\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "max",
          "type": "string",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "Maximum value of input",
          "docsTags": [],
          "default": "'100'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "string",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "Minmum value of input",
          "docsTags": [],
          "default": "'0'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "value of input",
          "docsTags": [],
          "default": "'20'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "input",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "sdds-slider"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "sdds-slider": [
          "sdds-continousvalue-slider"
        ]
      }
    },
    {
      "filePath": "./src/components/datetime/datetime.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-datetime",
      "readme": "# sdds-textfield\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": false,
          "docs": "Autofocus for input",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Set input in disabled state",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name property",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "nominwidth",
          "type": "boolean",
          "mutable": false,
          "attr": "nominwidth",
          "reflectToAttr": false,
          "docs": "With setting",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the input",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "state",
          "type": "string",
          "mutable": false,
          "attr": "state",
          "reflectToAttr": false,
          "docs": "Error state of input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": true,
          "docs": "Which input type, text, password or similar",
          "docsTags": [],
          "default": "'text'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Value of the input text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "customChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Change event for the datetime",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "focus",
          "capture": false,
          "passive": false
        },
        {
          "event": "focusout",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/dropdown/dropdown.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-dropdown",
      "readme": "# sdds-dropdown\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "defaultOption",
          "type": "string",
          "mutable": false,
          "attr": "default-option",
          "reflectToAttr": false,
          "docs": "Add the value of the option as string to set it as default",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Add the value of the option to set it as default",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helper",
          "type": "string",
          "mutable": false,
          "attr": "helper",
          "reflectToAttr": false,
          "docs": "Add helper text in the bottom of dropdown",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inline",
          "type": "boolean",
          "mutable": false,
          "attr": "inline",
          "reflectToAttr": false,
          "docs": "Set to true to make the width following the label text length",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label text for label inside & outside",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelPosition",
          "type": "string",
          "mutable": false,
          "attr": "label-position",
          "reflectToAttr": false,
          "docs": "Position of label: `no-label` (default), `inside`, `outside`",
          "docsTags": [],
          "default": "'no-label'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Placeholder text for dropdown with no selectedLabel item",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "selectedOption",
          "type": "string",
          "mutable": false,
          "attr": "selected-option",
          "reflectToAttr": false,
          "docs": "Add the value of the option as string to set it as new selected value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "`large` (default), `small`, `medium`",
          "docsTags": [],
          "default": "'large'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "state",
          "type": "string",
          "mutable": false,
          "attr": "state",
          "reflectToAttr": false,
          "docs": "Support `error` state",
          "docsTags": [],
          "default": "'default'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "`default`, `multiselect`, `filter`, `nested`",
          "docsTags": [],
          "default": "'default'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "inputSearch",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "document",
          "capture": false,
          "passive": false
        },
        {
          "event": "selectOption",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "sdds-dropdown-filter"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "sdds-dropdown-filter": [
          "sdds-dropdown"
        ]
      }
    },
    {
      "filePath": "./src/components/dropdown/dropdown-filter.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-dropdown-filter",
      "readme": "# sdds-dropdown\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "data",
          "type": "string",
          "mutable": false,
          "attr": "data",
          "reflectToAttr": false,
          "docs": "Data is an array of objects that contains label and value\n`data = [{label:'Option 1', value:'opt-1'},{label:'Option 2', value:'opt-2'}]`",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "defaultOption",
          "type": "string",
          "mutable": false,
          "attr": "default-option",
          "reflectToAttr": false,
          "docs": "Add the value of the option to set it as default",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Add the value of the option to set it as default",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helper",
          "type": "string",
          "mutable": false,
          "attr": "helper",
          "reflectToAttr": false,
          "docs": "Add helper text in the bottom of dropdown",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inline",
          "type": "boolean",
          "mutable": false,
          "attr": "inline",
          "reflectToAttr": false,
          "docs": "Set to true to make the width following the label text length",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label for dropdown with no selected item",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelPosition",
          "type": "string",
          "mutable": false,
          "attr": "label-position",
          "reflectToAttr": false,
          "docs": "Position of label: `no-label` (default), `inside`, `outside`",
          "docsTags": [],
          "default": "'no-label'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Placeholder text for dropdown with no selected item",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "selectedOption",
          "type": "string",
          "mutable": false,
          "attr": "selected-option",
          "reflectToAttr": false,
          "docs": "Add the value of the option as string to set it as new selected value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "`large` (default), `small`, `medium`",
          "docsTags": [],
          "default": "'large'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "state",
          "type": "string",
          "mutable": false,
          "attr": "state",
          "reflectToAttr": false,
          "docs": "Support `error` state",
          "docsTags": [],
          "default": "'default'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "inputSearch",
          "capture": false,
          "passive": false
        },
        {
          "event": "selectOption",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "sdds-dropdown-option",
        "sdds-dropdown"
      ],
      "dependencyGraph": {
        "sdds-dropdown-filter": [
          "sdds-dropdown-option",
          "sdds-dropdown"
        ]
      }
    },
    {
      "filePath": "./src/components/dropdown/dropdown-option.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-dropdown-option",
      "readme": "# sdds-dropdown\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "Selected set to true if selected",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Value is a unique string that will be used for application logic",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "selectOption",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "keydown",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "sdds-dropdown-filter"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "sdds-dropdown-filter": [
          "sdds-dropdown-option"
        ]
      }
    },
    {
      "filePath": "./src/alpha/slider/slider-dual-point.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-dual-point-slider",
      "readme": "# sdds-slider\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "max",
          "type": "string",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "Maximum value of input",
          "docsTags": [],
          "default": "'100'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "string",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "Minmum value of input",
          "docsTags": [],
          "default": "'0'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "value of range one",
          "docsTags": [],
          "default": "'20'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value2",
          "type": "string",
          "mutable": false,
          "attr": "value-2",
          "reflectToAttr": false,
          "docs": "value of range two",
          "docsTags": [],
          "default": "'70'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "input",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/table/table-header-cell.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-header-cell",
      "readme": "# c-table\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "columnKey",
          "type": "string",
          "mutable": false,
          "attr": "column-key",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "columnTitle",
          "type": "string",
          "mutable": false,
          "attr": "column-title",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "customWidth",
          "type": "string",
          "mutable": false,
          "attr": "custom-width",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "sortable",
          "type": "boolean",
          "mutable": false,
          "attr": "sortable",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "textAlign",
          "type": "string",
          "mutable": false,
          "attr": "text-align",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "bodyCellData",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "headKey",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "sortColumnData",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "sortColumnData",
          "target": "body",
          "capture": false,
          "passive": false
        },
        {
          "event": "sortingEnabler",
          "target": "body",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icon/icon.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-icon",
      "readme": "# sdds-icon\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'scania-truck'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tabs/inline-tabs/inline-tabs.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-inline-tabs",
      "readme": "# sdds-inline-tabs\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "autoHeight",
          "type": "boolean",
          "mutable": false,
          "attr": "auto-height",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "defaultTab",
          "type": "string",
          "mutable": false,
          "attr": "default-tab",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "showTab",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "showTab(key: string) => Promise<void>",
          "parameters": [],
          "docs": "",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tabs/inline-tabs-fullbleed/inline-tabs-fullbleed.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-inline-tabs-fullbleed",
      "readme": "# sdds-inline-tabs-fullbleed\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/modal/modal.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-modal",
      "readme": "# sdds-modal\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "prevent",
          "type": "boolean",
          "mutable": false,
          "attr": "prevent",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "selector",
          "type": "any",
          "mutable": false,
          "attr": "selector",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'md'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "click",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tabs/navigation-tabs/navigation-tabs.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-navigation-tabs",
      "readme": "# sdds-navigation-tabs\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/alpha/slider/slider.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-slider",
      "readme": "# sdds-slider\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "max",
          "type": "string",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'100'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "string",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'0'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'20'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "valueTwo",
          "type": "string",
          "mutable": false,
          "attr": "value-two",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'70'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "input",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "sdds-continousvalue-slider"
      ],
      "dependencyGraph": {
        "sdds-slider": [
          "sdds-continousvalue-slider"
        ]
      }
    },
    {
      "filePath": "./src/alpha/spinner/spinner.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-spinner",
      "readme": "# sdds-spinner\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/table/table.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-table",
      "readme": "# c-table\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "bodyData",
          "type": "any",
          "mutable": false,
          "attr": "body-data",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "`[\n      {\n          \"truck\": \"L-series\",\n          \"driver\": \"Sonya Bruce\",\n          \"country\": \"Brazil\",\n          \"mileage\": 123987\n      },\n      {\n          \"truck\": \"P-series\",\n          \"driver\": \"Guerra Bowman\",\n          \"country\": \"Sweden\",\n          \"mileage\": 2000852\n      },\n      {\n          \"truck\": \"G-series\",\n          \"driver\": \"Ferrell Wallace\",\n          \"country\": \"Germany\",\n          \"mileage\": 564\n      },\n      {\n          \"truck\": \"R-series\",\n          \"driver\": \"Cox Burris\",\n          \"country\": \"Spain\",\n          \"mileage\": 1789357\n      },\n      {\n          \"truck\": \"S-series\",\n          \"driver\": \"Montgomery Cervantes\",\n          \"country\": \"Croatia\",\n          \"mileage\": 65\n      },\n      {\n          \"truck\": \"L-series\",\n          \"driver\": \"Sheryl Nielsen\",\n          \"country\": \"Greece\",\n          \"mileage\": 365784\n      },\n      {\n          \"truck\": \"G-series\",\n          \"driver\": \"Benton Gomez\",\n          \"country\": \"France\",\n          \"mileage\": 80957\n      }\n  ]`",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "compactDesign",
          "type": "boolean",
          "mutable": false,
          "attr": "compact-design",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "filtering",
          "type": "boolean",
          "mutable": false,
          "attr": "filtering",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "multiSelect",
          "type": "boolean",
          "mutable": false,
          "attr": "multi-select",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "noMinWidth",
          "type": "boolean",
          "mutable": false,
          "attr": "no-min-width",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tableTitle",
          "type": "string",
          "mutable": false,
          "attr": "table-title",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "verticalDividers",
          "type": "boolean",
          "mutable": false,
          "attr": "vertical-dividers",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "whiteBackground",
          "type": "boolean",
          "mutable": false,
          "attr": "white-background",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "sortingEnabler",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "sortColumnData",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "sdds-body-cell"
      ],
      "dependencyGraph": {
        "sdds-table": [
          "sdds-body-cell"
        ]
      }
    },
    {
      "filePath": "./src/components/textarea/textarea.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-textarea",
      "readme": "# sdds-textarea\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "cols",
          "type": "number",
          "mutable": false,
          "attr": "cols",
          "reflectToAttr": false,
          "docs": "Textarea cols attribute",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Set input in disabled state",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helper",
          "type": "string",
          "mutable": false,
          "attr": "helper",
          "reflectToAttr": false,
          "docs": "Helper text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelPosition",
          "type": "string",
          "mutable": false,
          "attr": "label-position",
          "reflectToAttr": false,
          "docs": "Label position: `no-label` (default), `inside`, `outside`",
          "docsTags": [],
          "default": "'no-label'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "Max length of input",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name attribute",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Placeholder text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "rows",
          "type": "number",
          "mutable": false,
          "attr": "rows",
          "reflectToAttr": false,
          "docs": "Textarea rows attribute",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "state",
          "type": "string",
          "mutable": false,
          "attr": "state",
          "reflectToAttr": false,
          "docs": "Error state of input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "Value of the input text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "customChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Change event for the textarea",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "focus",
          "capture": false,
          "passive": false
        },
        {
          "event": "focusout",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/textfield/textfield.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-textfield",
      "readme": "# sdds-textfield\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": false,
          "docs": "Autofocus for input",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Set input in disabled state",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelInside",
          "type": "string",
          "mutable": false,
          "attr": "label-inside",
          "reflectToAttr": false,
          "docs": "Label that will be put inside the input",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "Max length of input",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name property",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "nominwidth",
          "type": "boolean",
          "mutable": false,
          "attr": "nominwidth",
          "reflectToAttr": false,
          "docs": "With setting",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Placeholder text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the input",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "state",
          "type": "string",
          "mutable": false,
          "attr": "state",
          "reflectToAttr": false,
          "docs": "Error state of input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": true,
          "docs": "Which input type, text, password or similar",
          "docsTags": [],
          "default": "'text'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Value of the input text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "customChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Change event for the textfield",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "focus",
          "capture": false,
          "passive": false
        },
        {
          "event": "focusout",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/theme/theme.tsx",
      "encapsulation": "none",
      "tag": "sdds-theme",
      "readme": "# sdds-theme\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "mode",
          "type": "string",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'light'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": true,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Set the brand name that will set the theme styling for the page.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tooltips/tooltip.tsx",
      "encapsulation": "shadow",
      "tag": "sdds-tooltip",
      "readme": "# sdds-tooltip\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "border",
          "type": "string",
          "mutable": false,
          "attr": "border",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "mouseOverTooltip",
          "type": "boolean",
          "mutable": false,
          "attr": "mouse-over-tooltip",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "offsetDistance",
          "type": "number",
          "mutable": false,
          "attr": "offset-distance",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "8",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "offsetSkidding",
          "type": "number",
          "mutable": false,
          "attr": "offset-skidding",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placement",
          "type": "\"auto\" | \"auto-end\" | \"auto-start\" | \"bottom\" | \"bottom-end\" | \"bottom-start\" | \"left\" | \"left-end\" | \"left-start\" | \"right\" | \"right-end\" | \"right-start\" | \"top\" | \"top-end\" | \"top-start\"",
          "mutable": false,
          "attr": "placement",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'bottom'",
          "values": [
            {
              "value": "auto",
              "type": "string"
            },
            {
              "value": "auto-end",
              "type": "string"
            },
            {
              "value": "auto-start",
              "type": "string"
            },
            {
              "value": "bottom",
              "type": "string"
            },
            {
              "value": "bottom-end",
              "type": "string"
            },
            {
              "value": "bottom-start",
              "type": "string"
            },
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "left-end",
              "type": "string"
            },
            {
              "value": "left-start",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            },
            {
              "value": "right-end",
              "type": "string"
            },
            {
              "value": "right-start",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            },
            {
              "value": "top-end",
              "type": "string"
            },
            {
              "value": "top-start",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "selector",
          "type": "string",
          "mutable": false,
          "attr": "selector",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "show",
          "type": "boolean",
          "mutable": false,
          "attr": "show",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "text",
          "type": "string",
          "mutable": false,
          "attr": "text",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    }
  ]
}