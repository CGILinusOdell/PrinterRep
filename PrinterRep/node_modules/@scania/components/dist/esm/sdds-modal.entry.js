import { r as registerInstance, h, H as Host, c as getElement } from './index-bff35170.js';

const modalCss = ".sdds-modal{background-color:var(--sdds-modal-bg);z-index:4;margin:auto;position:relative;border-radius:1rem;padding:16px}@media (min-width: 320px){.sdds-modal-xs{width:100%}.sdds-modal-sm{width:100%}.sdds-modal-md{width:100%}.sdds-modal-lg{width:100%}}@media (min-width: 672px){.sdds-modal-xs{width:75%}.sdds-modal-sm{width:62.5%}.sdds-modal-md{width:75%}.sdds-modal-lg{width:100%}}@media (min-width: 1056px){.sdds-modal-xs{width:31.25%}.sdds-modal-sm{width:43.75%}.sdds-modal-md{width:62.5%}.sdds-modal-lg{width:75%}}@media (min-width: 1312px){.sdds-modal-xs{width:31.25%}.sdds-modal-sm{width:37.5%}.sdds-modal-md{width:62.5%}.sdds-modal-lg{width:75%}}@media (min-width: 1584px){.sdds-modal-xs{width:25%}.sdds-modal-sm{width:37.5%}.sdds-modal-md{width:50%}.sdds-modal-lg{width:75%}}@media (max-width: 320px){.sdds-modal-md,.sdds-modal-lg,.sdds-modal-sm{height:100%}.sdds-modal-md slot[name=sdds-modal-actions]::slotted(*),.sdds-modal-lg slot[name=sdds-modal-actions]::slotted(*),.sdds-modal-sm slot[name=sdds-modal-actions]::slotted(*){display:-ms-flexbox;display:flex}}.sdds-modal-header{display:-ms-flexbox;display:flex;padding-bottom:var(--sdds-spacing-element-16)}.sdds-modal-btn{display:inline-block;width:16px;height:auto;background-image:url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M3.40338 2.34308C3.11048 2.05019 2.63561 2.05019 2.34272 2.34308C2.04982 2.63598 2.04982 3.11085 2.34272 3.40374L6.93897 8L2.34283 12.5961C2.04994 12.889 2.04994 13.3639 2.34283 13.6568C2.63572 13.9497 3.1106 13.9497 3.40349 13.6568L7.99963 9.06066L12.5958 13.6568C12.8887 13.9497 13.3635 13.9497 13.6564 13.6568C13.9493 13.3639 13.9493 12.889 13.6564 12.5961L9.06029 8L13.6565 3.40376C13.9494 3.11086 13.9494 2.63599 13.6565 2.3431C13.3636 2.0502 12.8888 2.0502 12.5959 2.3431L7.99963 6.93934L3.40338 2.34308Z' fill='%23171719'/%3E%3C/svg%3E%0A\");background-repeat:no-repeat;cursor:pointer}@media (min-width: 320px){.sdds-modal-btn{margin-left:var(--sdds-spacing-element-16)}}@media (min-width: 1056px){.sdds-modal-btn{margin-left:var(--sdds-spacing-element-48)}}.sdds-modal-overflow{overflow:hidden}:host{left:0;top:0;position:fixed;height:100%;width:100%;z-index:40000;background-color:var(--sdds-modal-backdrop);padding:0 16px}@media (max-width: 320px){:host{padding:0}}:host.show{display:-ms-flexbox;display:flex}:host.hide{display:none}:host(.show){display:-ms-flexbox;display:flex}:host(.hide){display:none}slot[name=sdds-modal-headline]::slotted(*){margin:0;-ms-flex:1;flex:1}slot[name=sdds-modal-body]::slotted(*){font-family:\"Scania Sans\", Arial, Helvetica, sans-serif;font-size:4rem;line-height:6rem;letter-spacing:-0.02em;padding-bottom:40px;margin:0}@media (min-width: 1056px){slot[name=sdds-modal-body]::slotted(*){padding-right:16rem}}slot[name=sdds-modal-actions]::slotted(*){margin-right:var(--sdds-spacing-element-16)}";

const Modal = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // Disable click event on backdrop
    this.prevent = false;
    // Size of the modal
    this.size = 'md';
    // State when modal should be shown
    this.show = false;
  }
  componentDidLoad() {
    const targets = document.querySelectorAll(this.selector);
    this.dismissModal();
    // If the modal doesn't have a selector to be triggered
    if (!targets) {
      console.warn('No prop for modal targeted, please add selector attribute');
      return;
    }
    // Find all buttons with selector (id/class) and add onclick event on it
    targets.forEach((el) => {
      el.addEventListener('click', () => {
        this.show = true;
      });
    });
  }
  dismissModal() {
    const nodes = this.el.querySelectorAll('[data-dismiss-modal]');
    nodes.forEach((el) => {
      el.addEventListener('click', () => {
        this.show = false;
      });
    });
  }
  showToggled() {
    let root = document.querySelector('html');
    if (this.show === true) {
      root.classList.add('sdds-modal-overflow');
    }
    else {
      root.classList.remove('sdds-modal-overflow');
    }
  }
  // Click event on valid targets to dismiss the modal
  handleClick(e) {
    const targetList = e.composedPath();
    const target = targetList[0];
    if (target.classList[0] === 'sdds-modal-btn' ||
      (target.classList[0] === 'sdds-modal-backdrop' && this.prevent === false)) {
      this.show = false;
    }
    e.stopPropagation();
  }
  render() {
    return (h(Host, { class: `sdds-modal-backdrop ${this.show ? 'show' : 'hide'}` }, h("div", { class: `sdds-modal ${this.size ? `sdds-modal-${this.size}` : ''} ` }, h("div", { class: "sdds-modal-header" }, h("slot", { name: "sdds-modal-headline" }), h("span", { class: "sdds-modal-btn" })), h("slot", { name: "sdds-modal-body" }), h("div", { class: "sdds-modal-actions" }, h("slot", { name: "sdds-modal-actions" })))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "show": ["showToggled"]
  }; }
};
Modal.style = modalCss;

export { Modal as sdds_modal };
