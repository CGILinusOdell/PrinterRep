import { p as plt, w as win, d as doc, N as NAMESPACE, a as promiseResolve, b as bootstrapLazy } from './index-bff35170.js';
import './global-fff1afbb.js';
import './store-d8af12eb.js';

/*
 Stencil Client Patch Browser v2.14.2 | MIT Licensed | https://stenciljs.com
 */
const getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\s|-/g, '_')}`;
const patchBrowser = () => {
    {
        // shim css vars
        plt.$cssShim$ = win.__cssshim;
    }
    // @ts-ignore
    const scriptElm = Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\/${NAMESPACE}(\\.esm)?\\.js($|\\?|#)`).test(s.src) ||
            s.getAttribute('data-stencil-namespace') === NAMESPACE)
        ;
    const opts = scriptElm['data-opts'] || {} ;
    if ('onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {
        // Safari < v11 support: This IF is true if it's Safari below v11.
        // This fn cannot use async/await since Safari didn't support it until v11,
        // however, Safari 10 did support modules. Safari 10 also didn't support "nomodule",
        // so both the ESM file and nomodule file would get downloaded. Only Safari
        // has 'onbeforeload' in the script, and "history.scrollRestoration" was added
        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.
        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.
        return {
            then() {
                /* promise noop */
            },
        };
    }
    {
        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;
        {
            patchDynamicImport(opts.resourcesUrl, scriptElm);
        }
        if (!win.customElements) {
            // module support, but no custom elements support (Old Edge)
            // @ts-ignore
            return import(/* webpackChunkName: "polyfills-dom" */ './dom-a385e381.js').then(() => opts);
        }
    }
    return promiseResolve(opts);
};
const patchDynamicImport = (base, orgScriptElm) => {
    const importFunctionName = getDynamicImportFunction(NAMESPACE);
    try {
        // test if this browser supports dynamic imports
        // There is a caching issue in V8, that breaks using import() in Function
        // By generating a random string, we can workaround it
        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info
        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);
    }
    catch (e) {
        // this shim is specifically for browsers that do support "esm" imports
        // however, they do NOT support "dynamic" imports
        // basically this code is for old Edge, v18 and below
        const moduleMap = new Map();
        win[importFunctionName] = (src) => {
            const url = new URL(src, base).href;
            let mod = moduleMap.get(url);
            if (!mod) {
                const script = doc.createElement('script');
                script.type = 'module';
                script.crossOrigin = orgScriptElm.crossOrigin;
                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {
                    type: 'application/javascript',
                }));
                mod = new Promise((resolve) => {
                    script.onload = () => {
                        resolve(win[importFunctionName].m);
                        script.remove();
                    };
                });
                moduleMap.set(url, mod);
                doc.head.appendChild(script);
            }
            return mod;
        };
    }
};

patchBrowser().then(options => {
  return bootstrapLazy([["sdds-dropdown-filter",[[1,"sdds-dropdown-filter",{"placeholder":[1],"label":[1],"defaultOption":[1,"default-option"],"selectedOption":[1,"selected-option"],"disabled":[4],"size":[1],"inline":[4],"labelPosition":[1,"label-position"],"state":[1],"helper":[1],"data":[1],"dataOptions":[32],"filteredContent":[32],"searchTerm":[32],"selectedOptionState":[32],"selectedLabel":[32],"selectedValue":[32]},[[0,"inputSearch","updateOptionsContent"],[0,"selectOption","selectOptionHandler"]]]]],["sdds-slider",[[1,"sdds-slider",{"type":[1],"min":[1],"max":[1],"value":[1],"valueTwo":[1,"value-two"],"leftRangeOldValue":[32],"rightRangeOldValue":[32],"minDiffValue":[32],"rangeStyle":[32],"secondRangeStyle":[32]},[[0,"input","handleChange"]]]]],["sdds-table",[[1,"sdds-table",{"tableTitle":[513,"table-title"],"verticalDividers":[516,"vertical-dividers"],"compactDesign":[516,"compact-design"],"noMinWidth":[516,"no-min-width"],"whiteBackground":[516,"white-background"],"multiSelect":[516,"multi-select"],"filtering":[516],"bodyData":[8,"body-data"],"innerBodyData":[32],"bodyDataManipulated":[32],"bodyDataOriginal":[32],"bodyRowSelected":[32],"multiselectArray":[32],"arrayOfKeys":[32],"multiselectArrayJSON":[32],"mainCheckboxSelected":[32],"tableSelector":[32],"disableAllSorting":[32]},[[0,"sortColumnData","updateOptionsContent"]]]]],["c-code-sample",[[1,"c-code-sample",{"type":[1],"code":[32]}]]],["sdds-accordion",[[1,"sdds-accordion",{"divider":[4]}]]],["sdds-accordion-item",[[1,"sdds-accordion-item",{"header":[1],"affix":[1],"disabled":[4],"expanded":[4],"paddingReset":[4,"padding-reset"]}]]],["sdds-badges",[[1,"sdds-badges",{"value":[1],"shape":[32],"size":[32],"text":[32]}]]],["sdds-button",[[1,"sdds-button",{"text":[1],"type":[1],"size":[1],"disabled":[4],"fullbleed":[4]}]]],["sdds-card",[[1,"sdds-card"]]],["sdds-datetime",[[1,"sdds-datetime",{"type":[513],"value":[513],"disabled":[4],"size":[1],"nominwidth":[4],"name":[1],"state":[1],"autofocus":[4],"focusInput":[32]},[[0,"focus","handleFocusIn"],[0,"focusout","handleFocusOut"]]]]],["sdds-dual-point-slider",[[1,"sdds-dual-point-slider",{"min":[1],"max":[1],"value":[1],"value2":[1,"value-2"],"rangeProp":[32],"rangeProp2":[32],"minDiffValue":[32],"leftRangeOldValue":[32],"rightRangeOldValue":[32]},[[0,"input","handleChange"]]]]],["sdds-header-cell",[[1,"sdds-header-cell",{"columnKey":[513,"column-key"],"columnTitle":[513,"column-title"],"customWidth":[513,"custom-width"],"textAlign":[513,"text-align"],"sortable":[4],"textAlignState":[32],"sortingDirection":[32],"sortedByMyKey":[32],"disableSortingBtn":[32]},[[16,"sortColumnData","updateOptionsContent"],[16,"sortingEnabler","updateSortingStatus"]]]]],["sdds-icon",[[1,"sdds-icon",{"name":[1],"icon":[32]}]]],["sdds-inline-tabs",[[1,"sdds-inline-tabs",{"defaultTab":[1,"default-tab"],"autoHeight":[4,"auto-height"],"tabs":[32],"buttonWidth":[32],"tabHeight":[32],"showLeftScroll":[32],"showRightScroll":[32],"showTab":[64]}]]],["sdds-inline-tabs-fullbleed",[[1,"sdds-inline-tabs-fullbleed",{"tabs":[32],"showLeftScroll":[32],"showRightScroll":[32]}]]],["sdds-modal",[[1,"sdds-modal",{"selector":[8],"prevent":[4],"size":[1],"show":[32]},[[0,"click","handleClick"]]]]],["sdds-navigation-tabs",[[1,"sdds-navigation-tabs",{"tabs":[32],"showLeftScroll":[32],"showRightScroll":[32]}]]],["sdds-spinner",[[1,"sdds-spinner",{"size":[1],"type":[1],"cubes":[32],"rects":[32]}]]],["sdds-textarea",[[1,"sdds-textarea",{"label":[1],"name":[1],"helper":[1],"cols":[2],"rows":[2],"labelPosition":[1,"label-position"],"placeholder":[1],"value":[1],"disabled":[4],"state":[1],"maxlength":[2],"autofocus":[4],"focusInput":[32]},[[0,"focus","handleFocusIn"],[0,"focusout","handleFocusOut"]]]]],["sdds-textfield",[[1,"sdds-textfield",{"type":[513],"labelInside":[1,"label-inside"],"placeholder":[1],"value":[513],"disabled":[4],"size":[1],"nominwidth":[4],"name":[1],"state":[1],"maxlength":[2],"autofocus":[4],"focusInput":[32]},[[0,"focus","handleFocusIn"],[0,"focusout","handleFocusOut"]]]]],["sdds-theme",[[0,"sdds-theme",{"name":[1025],"mode":[1],"tagName":[32],"currentTheme":[32],"favicons":[32],"store":[32]}]]],["sdds-tooltip",[[1,"sdds-tooltip",{"text":[1],"border":[1],"selector":[1],"mouseOverTooltip":[4,"mouse-over-tooltip"],"show":[4],"placement":[1],"offsetSkidding":[2,"offset-skidding"],"offsetDistance":[2,"offset-distance"],"target":[32]}]]],["sdds-body-cell",[[1,"sdds-body-cell",{"cellValue":[520,"cell-value"],"cellKey":[520,"cell-key"],"textAlign":[32],"activeSorting":[32]},[[16,"bodyCellData","updateTextAlign"],[16,"headKey","updateCellActiveState"]]]]],["sdds-continousvalue-slider",[[1,"sdds-continousvalue-slider",{"min":[1],"max":[1],"value":[1],"rangeProp":[32]},[[0,"input","handleChange"]]]]],["sdds-dropdown_2",[[1,"sdds-dropdown",{"placeholder":[1],"defaultOption":[1,"default-option"],"selectedOption":[1,"selected-option"],"disabled":[4],"type":[1],"size":[1],"inline":[4],"labelPosition":[1,"label-position"],"label":[1],"state":[1],"helper":[1],"items":[32],"open":[32],"node":[32],"selectedLabel":[32],"selectedValue":[32],"uuid":[32],"dropdownUniqueClass":[32],"openUpwards":[32],"dropdownMenuHeight":[32],"dropdownMenuSelector":[32]},[[4,"click","handleDocClick"],[0,"selectOption","selectOptionHandler"]]],[1,"sdds-dropdown-option",{"selected":[4],"value":[513],"innerValue":[32]},[[0,"keydown","onKeyDown"]]]]]], options);
});
