'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-ae24d128.js');

const tableCss = ".sdds-table{border-collapse:collapse;display:table}.sdds-table .sdds-table__upper-bar{display:table-caption;position:relative;background-color:var(--sdds-grey-400);color:var(--sdds-grey-958);padding:0 var(--sdds-spacing-element-16);height:64px;border-top-left-radius:4px;border-top-right-radius:4px}.sdds-table .sdds-table__upper-bar-flex{width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.sdds-table .sdds-table__title{font-family:\"Scania Sans Semi Condensed\", Arial, Helvetica, sans-serif;font-weight:bold;font-size:3.5rem;line-height:4rem;letter-spacing:-0.01em;padding-top:var(--sdds-spacing-element-16);text-align:left}.sdds-table .sdds-table__searchbar{display:-ms-flexbox;display:flex;-ms-flex-item-align:center;align-self:center;position:relative;height:40px;width:40px;border-radius:4px 4px 0 0;-webkit-transition:background-color 250ms ease, width 250ms ease;transition:background-color 250ms ease, width 250ms ease;overflow:hidden;background-color:transparent}.sdds-table .sdds-table__searchbar::after{content:\"\";width:100%;height:2px;position:absolute;bottom:0;background-color:var(--sdds-blue-400);-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transition:-webkit-transform 150ms ease;transition:-webkit-transform 150ms ease;transition:transform 150ms ease;transition:transform 150ms ease, -webkit-transform 150ms ease}.sdds-table .sdds-table__searchbar:focus-within::after{-webkit-transform:scaleX(100%);transform:scaleX(100%)}.sdds-table .sdds-table__searchbar:focus-within,.sdds-table .sdds-table__searchbar.sdds-table__searchbar--active{width:208px;background-color:var(--sdds-grey-50)}.sdds-table .sdds-table__searchbar:focus-within:hover,.sdds-table .sdds-table__searchbar.sdds-table__searchbar--active:hover{background-color:var(--sdds-grey-50)}.sdds-table .sdds-table__searchbar .sdds-table__searchbar-input{font-family:\"Scania Sans Semi Condensed\", \"Scania Sans Condensed\", Arial, Helvetica, sans-serif;font-size:3.5rem;line-height:4rem;letter-spacing:-0.01em;z-index:1;width:100%;height:100%;border:none;padding:0 36px 0 16px;background-color:transparent;outline:none;cursor:pointer}.sdds-table .sdds-table__searchbar .sdds-table__searchbar-input :focus{background-color:var(--sdds-grey-50)}.sdds-table .sdds-table__searchbar:hover{background-color:var(--sdds-grey-300)}.sdds-table .sdds-table__searchbar .sdds-table__searchbar-icon{z-index:0;position:absolute;right:9px;top:9px;width:20px;height:20px}.sdds-table .sdds-table__header .sdds-table__header-cell:first-child{border-top-left-radius:4px}.sdds-table .sdds-table__header .sdds-table__header-cell:last-child{border-top-right-radius:4px}.sdds-table .sdds-table__upper-bar+.sdds-table__header .sdds-table__header-cell,.sdds-table .sdds-table__upper-bar+.sdds-table__header ::slotted(sdds-header-cell){border-radius:0}.sdds-table .sdds-table__header .sdds-table__header-cell,.sdds-table .sdds-table__header ::slotted(sdds-header-cell){font-family:\"Scania Sans Semi Condensed\", Arial, Helvetica, sans-serif;font-weight:bold;font-size:3.5rem;line-height:4rem;letter-spacing:-0.01em;display:table-cell;text-align:left;color:var(--sdds-grey-958);background-color:var(--sdds-grey-300);border-bottom:1px solid var(--sdds-grey-400);padding:0;height:48px;min-width:192px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;-webkit-transition:background-color 200ms ease;transition:background-color 200ms ease}.sdds-table .sdds-table__header .sdds-table__header-cell:first-child,.sdds-table .sdds-table__header ::slotted(sdds-header-cell):first-child{border-top-left-radius:4px}.sdds-table .sdds-table__header .sdds-table__header-cell:last-child,.sdds-table .sdds-table__header ::slotted(sdds-header-cell):last-child{border-top-right-radius:4px}.sdds-table .sdds-table__header .sdds-table__header-cell--checkbox{min-width:unset;width:48px;padding:0}.sdds-table .sdds-table__header ::slotted(sdds-header-cell:hover){background-color:var(--sdds-grey-400)}.sdds-table .sdds-table__row{border-bottom:1px solid var(--sdds-grey-400);background-color:var(--sdds-white);-webkit-transition:background-color 200ms ease;transition:background-color 200ms ease}.sdds-table .sdds-table__row:hover{background-color:var(--sdds-grey-100)}.sdds-table .sdds-table__row--selected{background-color:var(--sdds-grey-300)}.sdds-table .sdds-table__row--selected:hover{background-color:var(--sdds-grey-400)}.sdds-table .sdds-table__row--hidden{display:none}.sdds-table .sdds-table__body-cell,.sdds-table ::slotted(sdds-body-cell){font-family:\"Scania Sans Semi Condensed\", \"Scania Sans Condensed\", Arial, Helvetica, sans-serif;font-size:3.5rem;line-height:4rem;letter-spacing:-0.01em;display:table-cell;-webkit-box-sizing:border-box;box-sizing:border-box;color:var(--sdds-grey-958);padding:var(--sdds-spacing-element-16);min-width:192px;vertical-align:top;background-color:transparent;-webkit-transition:background-color 200ms ease;transition:background-color 200ms ease}.sdds-table .sdds-table__body-cell--hover{background-color:var(--sdds-grey-200)}.sdds-table .sdds-table__body-cell--checkbox{min-width:48px;width:48px;padding:0}.sdds-table.sdds-table--compact .sdds-table__upper-bar{height:56px}.sdds-table.sdds-table--compact .sdds-table__body-cell,.sdds-table.sdds-table--compact ::slotted(sdds-body-cell){padding:var(--sdds-spacing-element-8) var(--sdds-spacing-element-16)}.sdds-table.sdds-table--compact .sdds-table__body-cell--checkbox{min-width:32px;width:32px;padding:0}.sdds-table.sdds-table--compact .sdds-table__header-cell,.sdds-table.sdds-table--compact ::slotted(sdds-header-cell){height:32px}.sdds-table.sdds-table--compact .sdds-form-label--data-table{height:32px}.sdds-table.sdds-table--divider .sdds-table__header-cell,.sdds-table.sdds-table--divider ::slotted(sdds-header-cell),.sdds-table.sdds-table--divider .sdds-table__body-cell,.sdds-table.sdds-table--divider ::slotted(sdds-body-cell){border-right:1px solid var(--sdds-grey-400)}.sdds-table.sdds-table--divider .sdds-table__header-cell:last-child,.sdds-table.sdds-table--divider ::slotted(sdds-header-cell:last-child),.sdds-table.sdds-table--divider .sdds-table__body-cell:last-child,.sdds-table.sdds-table--divider ::slotted(sdds-body-cell:last-child){border-right:none}.sdds-table.sdds-table--no-min-width .sdds-table__header .sdds-table__header-cell,.sdds-table.sdds-table--no-min-width .sdds-table__header ::slotted(.sdds-table__header-cell){min-width:unset}.sdds-table.sdds-table--no-min-width .sdds-table__body .sdds-table__body-cell,.sdds-table.sdds-table--no-min-width .sdds-table__body ::slotted(sdds-body-cell){min-width:unset}.sdds-table.sdds-table--on-white-bg .sdds-table__row{background-color:var(--sdds-grey-50)}.sdds-table.sdds-table--on-white-bg .sdds-table__row:hover{background-color:var(--sdds-grey-200)}.sdds-table.sdds-table--multiselect .sdds-table__header ::slotted(.sdds-table__header-cell:first-child){border-top-left-radius:0}.sdds-table ::slotted(sdds-header-cell:first-child){border-top-left-radius:4px}.sdds-table ::slotted(sdds-header-cell:last-child){border-top-right-radius:4px}.sdds-table .sdds-table__upper-bar+.sdds-table__header ::slotted(sdds-header-cell){border-radius:0}:host(.sdds-table__header-cell){vertical-align:middle}:host(.sdds-table__header-cell) .sdds-table__header-text{padding:0 16px;margin:0}:host(.sdds-table__header-cell--sortable) .sdds-table__header-button{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;gap:8px;-ms-flex-pack:start;justify-content:start;-ms-flex-direction:row;flex-direction:row;width:100%;height:100%;padding:0 16px;background-color:transparent;border:none;cursor:pointer;-webkit-transition:background-color 200ms ease;transition:background-color 200ms ease}:host(.sdds-table__header-cell--sortable) .sdds-table__header-button:focus{outline:2px solid var(--sdds-blue-400);outline-offset:-2px}:host(.sdds-table__header-cell--sortable) .sdds-table__header-button:focus .sdds-table__header-button-icon{opacity:1}:host(.sdds-table__header-cell--sortable) .sdds-table__header-button .sdds-table__header-button-text{font-family:\"Scania Sans Semi Condensed\", Arial, Helvetica, sans-serif;font-weight:bold;font-size:3.5rem;line-height:4rem;letter-spacing:-0.01em;text-align:left;color:var(--sdds-grey-958)}:host(.sdds-table__header-cell--sortable) .sdds-table__header-button .sdds-table__header-button-icon{-ms-flex:0 0 16px;flex:0 0 16px;height:16px;opacity:0;-webkit-transform-origin:center;transform-origin:center;-webkit-transition:opacity 200ms ease-in, -webkit-transform 200ms ease;transition:opacity 200ms ease-in, -webkit-transform 200ms ease;transition:opacity 200ms ease-in, transform 200ms ease;transition:opacity 200ms ease-in, transform 200ms ease, -webkit-transform 200ms ease}:host(.sdds-table__header-cell--sortable) .sdds-table__header-button:hover .sdds-table__header-button-icon{opacity:1}:host(.sdds-table__header-cell--right-align) .sdds-table__header-button{text-align:right;-ms-flex-pack:end;justify-content:end;-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.sdds-table__header-cell--is-sorted) .sdds-table__header-button{background-color:var(--sdds-grey-500)}:host(.sdds-table__header-cell--is-sorted) .sdds-table__header-button:hover{background-color:var(--sdds-grey-400)}:host(.sdds-table__header-cell--is-sorted) .sdds-table__header-button .sdds-table__header-button-icon{opacity:1}:host(.sdds-table__header-cell--is-sorted) .sdds-table__header-button .sdds-table__header-button-icon--rotate{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.sdds-checkbox-item{font-family:\"Scania Sans Semi Condensed\", \"Scania Sans Condensed\", Arial, Helvetica, sans-serif;font-size:3.5rem;line-height:4rem;letter-spacing:-0.01em;color:var(--sdds-checkbox-text);display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.sdds-checkbox-item .sdds-form-input[type=checkbox]{-webkit-appearance:none;outline:none;margin:0;border:0;border-radius:2px;background-color:var(--sdds-checkbox-interaction-02);width:4rem;height:4rem;position:relative;cursor:pointer}.sdds-checkbox-item .sdds-form-input[type=checkbox]+label{padding-left:var(--sdds-spacing-element-8);padding-top:var(--sdds-spacing-element-4);padding-bottom:var(--sdds-spacing-element-4);cursor:pointer}.sdds-checkbox-item .sdds-form-input[type=checkbox]:before,.sdds-checkbox-item .sdds-form-input[type=checkbox]:after{content:\"\";position:absolute;-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:2px}.sdds-checkbox-item .sdds-form-input[type=checkbox]:before{width:6rem;height:6rem;left:-4px;top:-4px}.sdds-checkbox-item .sdds-form-input[type=checkbox]:after{border:1px solid var(--sdds-checkbox-interaction-01);background-color:var(--sdds-checkbox-interaction-02);width:4rem;height:4rem}.sdds-checkbox-item .sdds-form-input[type=checkbox]:hover:before{background-color:var(--sdds-checkbox-bg-hover);opacity:0.12}.sdds-checkbox-item .sdds-form-input[type=checkbox]:focus:before{background-color:var(--sdds-checkbox-bg-focus);opacity:0.24;-webkit-animation:cb-focus 0.4s cubic-bezier(0.65, 0.05, 0.38, 0.95) forwards;animation:cb-focus 0.4s cubic-bezier(0.65, 0.05, 0.38, 0.95) forwards}.sdds-checkbox-item .sdds-form-input[type=checkbox]:disabled,.sdds-checkbox-item .sdds-form-input[type=checkbox].disabled{cursor:default}.sdds-checkbox-item .sdds-form-input[type=checkbox]:disabled:after,.sdds-checkbox-item .sdds-form-input[type=checkbox].disabled:after{border-color:var(--sdds-checkbox-disabled)}.sdds-checkbox-item .sdds-form-input[type=checkbox]:disabled+label,.sdds-checkbox-item .sdds-form-input[type=checkbox].disabled+label{color:var(--sdds-checkbox-disabled);cursor:default}.sdds-checkbox-item .sdds-form-input[type=checkbox]:disabled:hover:before,.sdds-checkbox-item .sdds-form-input[type=checkbox].disabled:hover:before{display:none}.sdds-form-input[type=checkbox]:checked:after{background-color:var(--sdds-checkbox-interaction-01);background-image:url(\"data:image/svg+xml;utf8,<svg width='8' height='6' viewBox='0 0 8 6' fill='none' xmlns='http://www.w3.org/2000/svg'> <path d='M1 2.33333L3.4 5C4.80589 3.4379 5.59411 2.5621 7 1' stroke='white' stroke-linecap='round' stroke-linejoin='round'/></svg>\");background-repeat:no-repeat;background-position:center}.sdds-form-input[type=checkbox]:checked:disabled:hover:before,.sdds-form-input[type=checkbox]:checked:disabled:before,.sdds-form-input[type=checkbox]:checked.disabled:hover:before,.sdds-form-input[type=checkbox]:checked.disabled:before{display:block;width:4rem;height:4rem;left:0;top:0;border:1px solid var(--sdds-checkbox-disabled)}.sdds-form-input[type=checkbox]:checked:disabled:after,.sdds-form-input[type=checkbox]:checked.disabled:after{background-color:var(--sdds-checkbox-interaction-02);color:var(--sdds-checkbox-disabled);background-image:url(\"data:image/svg+xml;utf8,<svg width='8' height='6' viewBox='0 0 8 6' fill='none' xmlns='http://www.w3.org/2000/svg'> <path d='M1 2.33333L3.4 5C4.80589 3.4379 5.59411 2.5621 7 1' stroke='%23C5C6C9' stroke-linecap='round' stroke-linejoin='round'/></svg>\")}@-webkit-keyframes cb-focus{0%{-webkit-transform:scale(0);transform:scale(0);opacity:0}50%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{-webkit-transform:scale(1);transform:scale(1);opacity:0}}@keyframes cb-focus{0%{-webkit-transform:scale(0);transform:scale(0);opacity:0}50%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{-webkit-transform:scale(1);transform:scale(1);opacity:0}}.sdds-form-label--data-table{width:100%;height:48px;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;cursor:pointer}";

const Table = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.sortingEnabler = index.createEvent(this, "sortingEnabler", 7);
    this.verticalDividers = false;
    this.compactDesign = false;
    this.noMinWidth = false;
    this.whiteBackground = false;
    this.multiSelect = false;
    this.filtering = false;
    this.bodyData = `[
      {
          "truck": "L-series",
          "driver": "Sonya Bruce",
          "country": "Brazil",
          "mileage": 123987
      },
      {
          "truck": "P-series",
          "driver": "Guerra Bowman",
          "country": "Sweden",
          "mileage": 2000852
      },
      {
          "truck": "G-series",
          "driver": "Ferrell Wallace",
          "country": "Germany",
          "mileage": 564
      },
      {
          "truck": "R-series",
          "driver": "Cox Burris",
          "country": "Spain",
          "mileage": 1789357
      },
      {
          "truck": "S-series",
          "driver": "Montgomery Cervantes",
          "country": "Croatia",
          "mileage": 65
      },
      {
          "truck": "L-series",
          "driver": "Sheryl Nielsen",
          "country": "Greece",
          "mileage": 365784
      },
      {
          "truck": "G-series",
          "driver": "Benton Gomez",
          "country": "France",
          "mileage": 80957
      }
  ]`;
    this.innerBodyData = [];
    this.bodyDataManipulated = [];
    this.bodyDataOriginal = [];
    this.bodyRowSelected = false;
    this.multiselectArray = [];
    this.arrayOfKeys = [];
    this.mainCheckboxSelected = false;
    this.disableAllSorting = false;
    // Would  be good to make a check to make sure if header is present,
    // that Number of elements in header is equal to the number of elements in first row of table
    this.countBodyElement = () => {
      let count = 0;
      Object.keys(this.bodyDataManipulated[0]).forEach(() => count++);
    };
    this.compareValues = (key, order = 'asc') => function innerSort(a, b) {
      // eslint-disable-next-line no-prototype-builtins
      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {
        // property doesn't exist on either object
        return 0;
      }
      const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];
      const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];
      let comparison = 0;
      if (varA > varB) {
        comparison = 1;
      }
      else if (varA < varB) {
        comparison = -1;
      }
      return order === 'desc' ? comparison * -1 : comparison;
    };
    /* Lines 148 to 201 - multiSelect feature of table */
    this.selectedDataExporter = (event) => {
      const selectedRows = event.currentTarget
        .closest('.sdds-table')
        .getElementsByClassName('sdds-table__body')[0]
        .getElementsByClassName('sdds-table__row--selected');
      this.multiselectArray = [];
      for (let j = 0; j < selectedRows.length; j++) {
        const rowCells = selectedRows[j].getElementsByTagName('sdds-body-cell');
        const selectedObject = {};
        for (let i = 0; i < rowCells.length; i++) {
          const currentCellKey = rowCells[i].getAttribute('cell-key');
          const currentCellValue = rowCells[i].getAttribute('cell-value');
          selectedObject[currentCellKey] = currentCellValue;
        }
        this.multiselectArray.push(selectedObject);
      }
      this.multiselectArrayJSON = JSON.stringify(this.multiselectArray);
    };
    this.uncheckedAll = () => {
      const headCheckbox = this.tableSelector.querySelector('.sdds-table__header-cell.sdds-table__header-cell--checkbox > .sdds-checkbox-item > .sdds-form-label > .sdds-form-input');
      if (headCheckbox.checked) {
        headCheckbox.checked = false;
      }
      const bodyCheckboxes = this.tableSelector.getElementsByClassName('sdds-table__body')[0].children;
      for (let z = 0; z < bodyCheckboxes.length; z++) {
        const singleCheckbox = bodyCheckboxes[z].getElementsByClassName('sdds-form-input')[0];
        const row = singleCheckbox.closest('tr');
        if (singleCheckbox.checked) {
          singleCheckbox.checked = false;
          row.classList.remove('sdds-table__row--selected');
        }
      }
      this.multiselectArrayJSON = JSON.stringify([]);
    };
    this.headCheckBoxClicked = (event) => {
      this.mainCheckboxSelected = !!event.currentTarget.checked;
      const bodyCheckboxes = event.currentTarget
        .closest('.sdds-table')
        .getElementsByClassName('sdds-table__body')[0].children;
      for (let z = 0; z < bodyCheckboxes.length; z++) {
        const singleCheckbox = bodyCheckboxes[z].getElementsByClassName('sdds-form-input')[0];
        const row = singleCheckbox.closest('tr');
        if (event.currentTarget.checked) {
          singleCheckbox.checked = true;
          row.classList.add('sdds-table__row--selected');
        }
        else {
          singleCheckbox.checked = false;
          row.classList.remove('sdds-table__row--selected');
        }
      }
      this.selectedDataExporter(event);
    };
    this.bodyCheckBoxClicked = (event) => {
      const row = event.currentTarget.closest('tr');
      if (event.currentTarget.checked === true) {
        row.classList.add('sdds-table__row--selected');
      }
      else {
        row.classList.remove('sdds-table__row--selected');
      }
      const tableBodyLevel = event.currentTarget
        .closest('.sdds-table')
        .getElementsByClassName('sdds-table__body')[0];
      const numberOfRows = tableBodyLevel.getElementsByClassName('sdds-table__row').length;
      const numberOfRowsSelected = tableBodyLevel.getElementsByClassName('sdds-table__row--selected').length;
      this.mainCheckboxSelected = numberOfRows === numberOfRowsSelected;
      this.selectedDataExporter(event);
    };
    this.setBodyItem = () => this.bodyDataManipulated.map((row) => (index.h("tr", { class: "sdds-table__row" }, this.multiSelect && (index.h("td", { class: "sdds-table__body-cell sdds-table__body-cell--checkbox" }, index.h("div", { class: "sdds-checkbox-item" }, index.h("label", { class: "sdds-form-label sdds-form-label--data-table" }, index.h("input", { class: "sdds-form-input", type: "checkbox", onChange: (e) => this.bodyCheckBoxClicked(e) }))))), Object.keys(row).map((cellData) => (index.h("sdds-body-cell", { "cell-key": cellData, "cell-value": row[cellData] }))))));
    // Search feat with two search logics
    this.searchFunction = (event) => {
      // grab the value of search and turn to small caps
      const searchTerm = event.currentTarget.value.toLowerCase();
      const sddsTableSearchBar = event.currentTarget.parentElement;
      // grab all rows in body
      const dataRows = event.currentTarget.parentElement.parentElement.parentElement.parentElement
        .getElementsByClassName('sdds-table__body')[0]
        .querySelectorAll('.sdds-table__row');
      // turn it into array
      const dataRowsToArray = [...dataRows];
      dataRowsToArray.map((item) => {
        // every row contains of many cells, find them and turn into array
        const cells = [...item.getElementsByTagName('sdds-body-cell')];
        const cellValuesArray = [];
        // go through cells and save cell-values in array
        cells.map((cellItem) => {
          const cellValue = cellItem.getAttribute('cell-value').toLowerCase();
          cellValuesArray.push(cellValue);
        });
        // iterate over array of values and see if one matches search string
        const matchCounter = cellValuesArray.find((element) => element.includes(searchTerm));
        // if matches, show parent row, otherwise hide the row
        if (matchCounter) {
          item.classList.remove('sdds-table__row--hidden');
        }
        else {
          item.classList.add('sdds-table__row--hidden');
        }
      });
      if (searchTerm.length > 0) {
        sddsTableSearchBar.classList.add('sdds-table__searchbar--active');
        this.disableAllSorting = true;
        this.sortingEnabler.emit(this.disableAllSorting);
      }
      else {
        sddsTableSearchBar.classList.remove('sdds-table__searchbar--active');
        this.disableAllSorting = false;
        this.sortingEnabler.emit(this.disableAllSorting);
      }
      /*
  
      // Logic for filtering JSON data on all columns
      // Really nice solution, do not delete, might be needed in future
      // Reason to go with upper one is not to lose selected state on checkboxes
      if (searchTerm.length > 0) {
        this.bodyDataManipulated = this.bodyDataOriginal.filter((option) =>
          Object.keys(option).some(
            (key) =>
              String(option[key] ?? '')
                .toLowerCase()
                .indexOf(searchTerm) >= 0
          )
        );
      } else {
        this.bodyDataManipulated = this.bodyDataOriginal;
      }
  
        */
    };
  }
  componentWillLoad() {
    this.arrayDataWatcher(this.bodyData);
  }
  arrayDataWatcher(newValue) {
    if (typeof newValue === 'string') {
      this.innerBodyData = JSON.parse(newValue);
    }
    else {
      this.innerBodyData = newValue;
    }
    this.bodyDataManipulated = [...this.innerBodyData];
    this.bodyDataOriginal = [...this.innerBodyData];
    this.arrayOfKeys = Object.keys(this.bodyDataManipulated[0]);
  }
  // Listen to sortColumnData from table-header-element
  updateOptionsContent(event) {
    // Nice usage of array deconstruct
    const [keyValue, sortingDirection] = event.detail;
    this.sortData(keyValue, sortingDirection);
  }
  sortData(keyValue, sortingDirection) {
    // use spread operator to make enable sorting and modifying array, same as using .slice()
    this.bodyDataManipulated = [...this.bodyDataManipulated];
    this.bodyDataManipulated.sort(this.compareValues(keyValue, sortingDirection));
    // Uncheck all checkboxes as state is lost on sorting. Do it only in case multiSelect is True.
    // We will try to find a better approach to solve this one
    if (this.multiSelect) {
      this.uncheckedAll();
    }
  }
  render() {
    return (index.h(index.Host, { "selected-rows": this.multiselectArrayJSON }, index.h("table", { class: {
        'sdds-table': true,
        'sdds-table--compact': this.compactDesign,
        'sdds-table--divider': this.verticalDividers,
        'sdds-table--no-min-width': this.noMinWidth,
        'sdds-table--on-white-bg': this.whiteBackground,
        'sdds-table--multiselect': this.multiSelect,
      }, ref: (table) => (this.tableSelector = table) }, (this.tableTitle || this.filtering) && (index.h("div", { class: "sdds-table__upper-bar" }, index.h("div", { class: "sdds-table__upper-bar-flex" }, index.h("caption", { class: "sdds-table__title" }, this.tableTitle), this.filtering && (index.h("div", { class: "sdds-table__searchbar" }, index.h("input", { class: "sdds-table__searchbar-input", type: "text", onKeyUp: (event) => this.searchFunction(event) }), index.h("span", { class: "sdds-table__searchbar-icon" }, index.h("svg", { fill: "none", xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 32" }, index.h("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M12.942 1.985c-6.051 0-10.957 4.905-10.957 10.957 0 6.051 4.906 10.957 10.957 10.957 2.666 0 5.109-.952 7.008-2.534l8.332 8.331a1 1 0 1 0 1.414-1.414l-8.331-8.331a10.912 10.912 0 0 0 2.534-7.01c0-6.05-4.905-10.956-10.957-10.956ZM3.985 12.942a8.957 8.957 0 1 1 17.914 0 8.957 8.957 0 0 1-17.914 0Z", fill: "currentColor" })))))))), index.h("thead", { class: "sdds-table__header" }, index.h("tr", { class: "sdds-table__header-row" }, this.multiSelect && (index.h("th", { class: "sdds-table__header-cell sdds-table__header-cell--checkbox" }, index.h("div", { class: "sdds-checkbox-item" }, index.h("label", { class: "sdds-form-label sdds-form-label--data-table" }, index.h("input", { class: "sdds-form-input", type: "checkbox", onChange: (e) => this.headCheckBoxClicked(e), checked: this.mainCheckboxSelected }))))), index.h("slot", null))), index.h("tbody", { class: "sdds-table__body" }, this.setBodyItem()))));
  }
  get host() { return index.getElement(this); }
  static get watchers() { return {
    "bodyData": ["arrayDataWatcher"]
  }; }
};
Table.style = tableCss;

exports.sdds_table = Table;
